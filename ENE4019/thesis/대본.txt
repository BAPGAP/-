안녕하세요 the design philosophy of the darpa internet protocols을 팔표하게된
컴퓨터소프트웨어학부 신상윤입니다.(클릭)

먼저 서론입니다. (클릭)
인터넷 프로토콜 스위트는(클릭) 인터넷에서 컴퓨터들이 서로 정보를 주고받는데 쓰이는 프로토콜의 모음인데요
미국에있는(클릭) 방위고등연구계획국에서 1970년대부터 이 인터넷 프로토콜 스위트를 개발해왔습니다.
이 개발과정을 살펴보면서 인터넷 아키텍처의 원래 목표를 확인하고, 
각 목표와 프로토콜의 특성을 비교하면서 살펴볼것입니다.(클릭)

다음은 기본 목표입니다.(클릭)
darpa 인터넷 아키텍처의 최상위 목표는 기존에 연결되어있는 네트워크들이 (클릭)
다중화 기능을 하는 기술을 개발하는 것이었습니다. 이는 네트워크를 연결해서 사용할때 
더 나은 성능을내는것을 확인했기 때문입니다.(클릭) 그래서 (클릭) ARPA packet radio network의 사용자가 
ARPANET에 연결할수 있도록 하고 싶었는데, 이를 위해 기존 network architecture를 통합할 필요가 있다고 생각했습니다. 
여기서 선택된 기술은 패킷 스위칭이고, 이는 internet architecture의 기본 구성 요소로 받아들여졌습니다. (클릭)

이어서 2차 목표입니다.(클릭)
인터넷 아키텍처는 7개의 구체적인 설계 목표를 가지고 개발되었습니다. 먼저 (클릭)
인터넷 통신은 네트워크 또는 게이트웨이의 손실이 있어도 계속 되어야 하고,(클릭)
다양한 종류의 커뮤니케이션 서비스를 지원해야 하고,(클릭)
여러 종류의 네트워크를 수용할 수 있어야 하고,(클릭)
분산된 관리가 가능해야 하고,(클릭)
비용 효율적이어야 하고,(클릭)
새로운 장치를 붙일 때 쉽게 붙어야 하고,(클릭)
사용된 리소스는 책임을 져야 합니다.
이 목표는 중요한 순서대로 나열되어있으며 
1번 목표가 손실을 염두한걸로 보아 군용으로 개발되었음을 알 수 있습니다.(클릭)

방금의 1번목표를 이어서 말하면(클릭)
가장 중요한것은 네트워크와 게이트웨이에 장애가 발생하더라도 인터넷이 통신 서비스를 계속 제공해야한다는
것입니다.(클릭) 이 목표를 달성하려면 현재 진행중인 대화를 설명하는 상태정보를 보호해야 합니다. 
일부 네트워크 아키텍처에서는 상태정보가 네트워크의(클릭) 중간 패킷 교환 노드에 저장되는데
이 경우 정보가 손실되지 않도록 (클릭)복제해야합니다.
하지만 강력한 복제를 보장하는 알고리즘을 만들기(클릭) 어렵고, 거의 모든 장애로부터 보호해야합니다.
그래서 선택한 대안은(클릭) 정보를 가져와 네트워크 끝부분에서 (클릭)수집하는 것입니다. 
이를 '운명 공유', fate-sharing이라 하고, (클릭)복제에 비해 2가지 장점이 있습니다. (클릭)
1. '운명 공유'는 임의의 수의 오류로 부터 보호하는 반면, 복제는 특정한 수에 대해서만 보호할수 있다.
2. '운명 공유'는 복제보다 설계하기 쉽다. (클릭)
또한 생존 가능성관점에서 보면
1. 중간 패킷 교환 노드와 게이트웨이에 진행 중인 연결에 대한 정보가 없어도 된다. 
2. 호스트 시스템이 더 신뢰성이 높다. 라고 할수있습니다. (클릭)

두번째 목표는 다양한 유형의 서비스를 지원해야 한다는 것입니다. (클릭)
처음에는 (클릭)TCP만으로 여러 서비스를 모두 제공하려고 시도했습니다.
그러나 TCP의 범위를 벗어난 서비스로 (클릭) XNET 지원, (클릭)디지털화된 음성의 실시간 전달등이 있었습니다.(클릭)
그래서 인터넷 아키텍처에는 둘 이상의 전송 서비스가 필요하고, 
최소한의 안정성, 동시 전송을 허용해야 한다고 결정되었습니다.(클릭)
이 목표로 인해 단일 프로토콜이었던(클릭) TCP가 TCP와 IP 두개의 계층으로 분리 되었습니다. 
TCP는 신뢰할 수 있는 시퀀스 데이터 스트림인 한 가지 특정 유형의 서비스를 제공한 반면 
IP는 다양한 유형의 서비스를 구축할 수 있는 기본 빌딩 블록을 제공하려고 했습니다. 
이 빌딩 블록은 생존성을 지원하기 위해 채택된 데이터그램이었습니다.(클릭)
그리고 (클릭)UDP가 개발되었는데,
UDP는 인터넷의 기본 데이터그램 서비스에 응용 프로그램 수준의 인터페이스를 제공하기 위해 만들어졌습니다.(클릭)

세번째 목표는 여러 종류의 네트워크를 수용할 수 있어야 한다는 것입니다.(클릭)
군사 및 상업 시설을 포함한 다양한 네트워크 기술을 통합하고 활용할 수 있는 것은 인터넷 아키텍처의 성공을 위해 매
우 중요했는데, 이 목표를 달성하는 데 매우 성공적이었습니다. 
장거리망, 근거리망, 방송위성망 등 다양한 네트워크에서 운영됩니다.(클릭)

지금까지의 세가지 목표는 인터넷 아키텍처 설계에서 가장 큰 영향을 미친 목표였습니다. 
이제 나머지 목표는 위의 세가지 목표에 비해서 중요도가 낮았기 때문에
덜 효율적으로 달성되었거나 완벽하게 설계되지 않았습니다.(클릭) (클릭)
4번 목표는 현재 운영되고 있는 대규모 인터넷에서 라우팅 결정은 리소스 사용에 대한 정책에 의해 제한되어야 합니다. 
오늘날 이것은 테이블을 수동으로 설정하는 매우 제한된 방식으로만 수행할 수 있고, 
오류가 발생하기 쉽고 동시에 충분히 강력하지 않습니다.(클릭)
5번 목표는 특정 상황에서 인터넷 아키텍처는 보다 맞춤화된 아키텍처만큼 값비싼 통신 리소스를 
효율적인 비용으로 활용하지 못합니다.(클릭)
6번 목표는 승인 및 재전송과 같은 원하는 유형의 서비스를 제공하는 여러 메커니즘이 있기 때문에
호스트를 인터넷에 연결하는 비용은 다른 아키텍처보다 다소 높을 수 있습니다.(클릭)
7번 목표는 현재 인터넷 아키텍처에는 패킷 흐름을 설명하는 도구가 거의 없습니다.(클릭)

인터넷 구조로 연결된 특정 네트워크, 게이트웨이 및 호스트 세트를 '실현(realization)'이라 저자가 명명했습다.(클릭)
설계에 의한 다양한 실현이 있는데, 성능과의 관계는 매우 어려운 문제입니다. 이러한 어려움은 첫 번째로(클릭) 
아키텍처의 목표가 성능을 제한하는 것이 아니라 가변성을 허용하는 것이고 
두 번째로(클릭) 성능을 설명하는 도구가 없는 것처럼 보였기 때문입니다.(클릭)

인터넷의 기본적인 구조적 특징은 데이터그램을 기본 네트워크를 통해 전송되는 개체로 사용하는 것입니다. (클릭)
데이터그램이 중요한 이유가 3가지 있는데,(클릭)
첫번쨰로 중간 스위칭 노드와의 연결 상태에 대한 정보가 필요없다. (클릭)
두번쨰로 다양한 유형의 서비스를 구현할 수 있는 기본 빌딩 블록을 제공한다. (클릭)
세번쨰로 최소 네트워크 서비스 가정을 나타내며, 
이는 다양한 네트워크가 다양한 인터넷 구현에 통합되도록 허용했다. 입니다.(클릭)

원래 ARPANET의 host‑to-host 프로토콜은 바이트와 패킷을 기반으로 하는 흐름 제어를 제공했습니다. 그러나 
이방법은 지나치게 복잡해 보여 한 가지 형태의 규정만 있으면 충분하다고 생각하고, 바이트를 선택했습니다.(클릭)
따라서 TCP의 흐름 제어 및 승인은 패킷 번호가 아닌 바이트 번호를 기반으로 합니다. 3가지 고려사항이 있었는데(클릭)
첫번쨰로 바이트의 시퀀스 공간에 제어 정보를 삽입할 수 있도록 하여 데이터를 확인응답으로 사용할수 있게한다.(클릭)	
두번쨰로 TCP 패킷을 더 작은 패킷으로 나눌 수 있도록 한다. (클릭)
세번쨰로 데이터 재전송이 필요한 경우 여러 개의 작은 패킷을 하나의 큰 패킷으로 보낼수있다. 입니다.(클릭)

결론적으로 데이터그램이 인터넷의 가장 중요한 목표를 해결하는 데 매우 효과적이기는 했지만(클릭) 
우선 순위 목록에서 더 아래에 있는 일부 목표를 해결하려고 시도할 때는 그다지 효과적이지 않았습니다.(클릭) 
이는 데이터그램보다(클릭) 더 나은 (클릭)빌딩 블록이 있을 수 있음을 뜻합니다.(클릭)

논문을 읽고 난 후 많은 생각을 했습니다. 
다이너마이트, 통조림, 의학의 발전 등등은 전쟁을 통한 기술 발전의 대표적인 예로 한 번쯤 
TV, YouTube로 들어본 적이 있습니다. 
그러나 인터넷 아키텍처가 전쟁을 위해 발전했고 아직 
설계 목표의 상위단계가 전쟁을 위한 목표와 같다는 것은 몰랐던 사실입니다. 
또한 전쟁을 위한 목표의 상위단계에 맞춰 아키텍처의 발전이 이루어져, 아직 하위단계에서까
지 완벽한 아키텍처가 없다는 것도 몰랐습니다. 
인터넷은 이미 거의 완벽하고, 기술의 발전은 속도에만 영향을 줄 것으로 알고 있었습니다. 
인터넷 아키텍처의 설계 목표에 맞는 프로토콜의 발전 과정을 보면서 인류의 기술이 발전하게 
되는 과정의 철학적 의미를 다시 한번 깨달았습니다. 
이제 전쟁이 없는 시기에서 발전의 방향은 설계 목표 하위단계도 완벽히 만족할 수 있는 기술을 
같이 연구해 나아가야 할 것입니다.(클릭)
감사합니다.
